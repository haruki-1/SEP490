// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Business_Object.Model.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("BookingID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Business_Object.Model.ReplyComment", b =>
                {
                    b.Property<int>("ReplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReplyID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReplyID");

                    b.HasIndex("AccountID");

                    b.HasIndex("CommentID");

                    b.ToTable("ReplyComment");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("ProfileID");

                    b.HasIndex("RoleID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"));

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogID");

                    b.HasIndex("AccountID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.BlogImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.HasIndex("BlogID");

                    b.ToTable("BlogImage");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberGuest")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRoom")
                        .HasColumnType("int");

                    b.Property<string>("ReasonCancle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxesPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int?>("VoucherID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("AccountID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.CommentBlog", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateComment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.HasIndex("AccountID");

                    b.HasIndex("BlogID");

                    b.ToTable("CommentBlog");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.FeedBack", b =>
                {
                    b.Property<int>("FeedBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBackID"));

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("BookingID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomeStayID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedBackID");

                    b.HasIndex("AccountID");

                    b.HasIndex("BookingID");

                    b.HasIndex("HomeStayID");

                    b.ToTable("FeedBack");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStay", b =>
                {
                    b.Property<int>("HomeStayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeStayID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomeStayStandar")
                        .HasColumnType("int");

                    b.Property<string>("MainImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpenedIn")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("HomeStayID");

                    b.HasIndex("AccountID");

                    b.HasIndex("AddressID");

                    b.ToTable("HomeStay");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayAddress", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("HomeStayAddress");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int>("HomeStayID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.HasIndex("HomeStayID");

                    b.ToTable("HomeStayImage");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayService", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"));

                    b.Property<int>("HomeStayID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceID");

                    b.HasIndex("HomeStayID");

                    b.ToTable("HomeStayService");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStaySubService", b =>
                {
                    b.Property<int>("SubServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubServiceID"));

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<string>("SubServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubServiceID");

                    b.HasIndex("ServiceID");

                    b.ToTable("HomeStaySubService");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.MyVoucher", b =>
                {
                    b.Property<int>("VoucherID")
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("IsVoucher")
                        .HasColumnType("bit");

                    b.HasKey("VoucherID", "AccountID");

                    b.HasIndex("AccountID");

                    b.ToTable("MyVoucher");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Profile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("ProfileID");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Voucher", b =>
                {
                    b.Property<int>("VoucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("QuantityUse")
                        .HasColumnType("int");

                    b.Property<string>("VoucherImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherID");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Business_Object.Model.Payment", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("booking");
                });

            modelBuilder.Entity("Business_Object.Model.ReplyComment", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.CommentBlog", "commentBlog")
                        .WithMany()
                        .HasForeignKey("CommentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("commentBlog");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Account", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileID");

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Profile");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Blog", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany("Blogs")
                        .HasForeignKey("AccountID");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.BlogImage", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Blog", "Blog")
                        .WithMany("BlogImage")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Booking", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID");

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherID");

                    b.Navigation("Account");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.CommentBlog", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Blog", "blog")
                        .WithMany("Comment")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("blog");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.FeedBack", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID");

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingID");

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Booking", null)
                        .WithMany("feedBacks")
                        .HasForeignKey("HomeStayID");

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.HomeStay", "HomeStay")
                        .WithMany("feedBacks")
                        .HasForeignKey("HomeStayID");

                    b.Navigation("Account");

                    b.Navigation("Booking");

                    b.Navigation("HomeStay");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStay", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany("HomeStays")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.HomeStayAddress", "HomeStayAddress")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("HomeStayAddress");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayImage", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.HomeStay", "HomeStay")
                        .WithMany("HomeStayImages")
                        .HasForeignKey("HomeStayID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HomeStay");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayService", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.HomeStay", "HomeStay")
                        .WithMany("HomeStayServices")
                        .HasForeignKey("HomeStayID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HomeStay");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStaySubService", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.HomeStayService", "HomeStayService")
                        .WithMany("HomeStaySubServices")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HomeStayService");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.MyVoucher", b =>
                {
                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Account", "Account")
                        .WithMany("MyVouchers")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GraduationAPI_EPOSHBOOKING.Model.Voucher", "Voucher")
                        .WithMany("MyVouchers")
                        .HasForeignKey("VoucherID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Account", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("HomeStays");

                    b.Navigation("MyVouchers");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Blog", b =>
                {
                    b.Navigation("BlogImage");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Booking", b =>
                {
                    b.Navigation("feedBacks");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStay", b =>
                {
                    b.Navigation("HomeStayImages");

                    b.Navigation("HomeStayServices");

                    b.Navigation("feedBacks");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.HomeStayService", b =>
                {
                    b.Navigation("HomeStaySubServices");
                });

            modelBuilder.Entity("GraduationAPI_EPOSHBOOKING.Model.Voucher", b =>
                {
                    b.Navigation("MyVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
